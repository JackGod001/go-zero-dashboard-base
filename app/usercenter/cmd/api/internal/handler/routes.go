// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"
	"time"

	user "go_zero_dashboard_base/app/usercenter/cmd/api/internal/handler/user"
	"go_zero_dashboard_base/app/usercenter/cmd/api/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/login",
				Handler: user.LoginHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/login/captcha",
				Handler: user.GetLoginCaptchaHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/user/register",
				Handler: user.RegisterHandler(serverCtx),
			},
		},
		rest.WithPrefix("/usercenter/v1"),
		rest.WithTimeout(3000000*time.Millisecond),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.CommonJwtAuthMiddleware},
			[]rest.Route{
				{
					Method:  http.MethodGet,
					Path:    "/info",
					Handler: user.GetUserInfoHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/logout",
					Handler: user.LogoutHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/password/update",
					Handler: user.UpdateUserPasswordHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/profile/info",
					Handler: user.GetUserProfileInfoHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/token/refresh",
					Handler: user.RefreshTokenHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/usercenter/v1"),
		rest.WithTimeout(3000000*time.Millisecond),
	)
}
